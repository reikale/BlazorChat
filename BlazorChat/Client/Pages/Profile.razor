@page "/"
@using BlazorChat.Client.ViewModels
@using BlazorChat.Shared.Models
@inject HttpClient HttpClient


<PageTitle>Profile</PageTitle>
@if(_profileViewModel == null)
{
    <div class="spinner-border text-secondary" style="width: 3rem; height: 3rem;" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <div class="col-12">
    <input type="text" @bind-value="_profileViewModel.FirstName" class="form-control" placeholder="First Name"/>
    <br />
    <input type="text" @bind-value="_profileViewModel.LastName" class="form-control" placeholder="Last Name"/>
    <br />
    <input type="text" @bind-value="_profileViewModel.Email" class="form-control" placeholder="Email Adress"/>
    <br />
    <button class="btn btn-primary" @onclick="UpdateProfile">Update Profile</button>
    <button class="btn btn-primary" @onclick="GetProfile">Get Profile</button>
    <span>&nbsp;&nbsp;</span>@_profileViewModel.Message
</div>
}


@code{
    private ProfileViewModel _profileViewModel = new ProfileViewModel();


    private async Task UpdateProfile()
    {
        User user = _profileViewModel;
        
        await HttpClient.PutAsJsonAsync("api/user/updateprofile/1", user);
        _profileViewModel.Message = "Profile updated successfully";
    }
    private async Task GetProfile()
    {
        User user = await HttpClient.GetFromJsonAsync<User>("api/user/updateprofile/1");
        // Modeli pakonvertuojam i viewmodel
        _profileViewModel = user;
        _profileViewModel.Message = "Profile loaded successfully";
    }
}